{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"[![NPM](https://img.shields.io/npm/v/bloxy.svg?maxAge=3600&style=flat-square)](https://npmjs.com/package/bloxy) [![CircleCI](https://circleci.com/gh/Visualizememe/bloxy.svg?style=svg)](https://circleci.com/gh/Visualizememe/bloxy) [![codecov](https://codecov.io/gh/Visualizememe/bloxy/branch/main/graph/badge.svg)](https://codecov.io/gh/Visualizememe/bloxy) [![Codacy Badge](https://app.codacy.com/project/badge/Grade/9dee8c70dd8e402f9a2f97831b98a723)](https://www.codacy.com/gh/Visualizememe/bloxy/dashboard?utm_source=github.com&utm_medium=referral&utm_content=Visualizememe/bloxy&utm_campaign=Badge_Grade) [![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2FVisualizememe%2Fbloxy.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2FVisualizememe%2Fbloxy?ref=badge_shield) [![Dependencies Status](https://status.david-dm.org/gh/Visualizememe/bloxy.svg)](https://david-dm.org/Visualizememe/bloxy) About This version is currently in development and may have unforeseen and/or untested bugs. If you find any, please, open up an issue / pull request, so we can make bloxy better together A powerful Node.JS module that lets you interact with the Roblox Web API easily, fast and reliably. - It is object-oriented (OO) - It's got great documentation - Predictable method -and property names - Highest coverage of the api of all the other modules on NPM! Getting Started Bloxy has 5 dependencies: got - To handle the HTTP requests (bloxy allows your own) lodash - For various purposes signalr-client - To connect with the WebSocket endpoints tough-cookie - For everything cookie-related tslib Necessary with built TypeScript projects :) Make sure you are able to install each one of these packages, as they are all vital to the functionality of this module! Prerequisites To be able to use bloxy, here's what you need to know: some knowledge of OOP and how it works knowledge about JS a computer Installing Installing bloxy is easy! Simply enter the following command, and you should be good to go\ud83d\udc4d npm install bloxy --save Installing the dependencies may take longer! Contributing Please, before making an issue or pull request, please make sure you have done this already: - Made sure there are no similar issues / PRs like this - if so, rather give them a comment! - Asked for help in the Roblox API Community - Sometimes, even the best of us need help. - (Issues only) Follow the style / template as shown in example-issue - Consistency works! Examples Check out below for some examples of how to use bloxy! Logging in With cookies // In an async environment const bloxy = require(\"bloxy\"); const client = new bloxy.Client({ credentials: { cookie: \"cookie\" } }); const authenticatedUser = await client.login(); console.log(`Logged in as ${authenticatedUser.id}`) // --> \"Logged in as X\" Giving a user a certain role const bloxy = require(\"bloxy\"); const client = new bloxy.Client({ credentials: { cookie: \"cookie\" } }); await client.login(); const group = await client.getGroup(3544434); await group.updateMember( 321, // User id 123 // Role id ); Acknowledgements Sentanos - For helpful solutions and ideas - roblox-js License This project is licensed under the MIT License.","title":"Home"},{"location":"#about","text":"This version is currently in development and may have unforeseen and/or untested bugs. If you find any, please, open up an issue / pull request, so we can make bloxy better together A powerful Node.JS module that lets you interact with the Roblox Web API easily, fast and reliably. - It is object-oriented (OO) - It's got great documentation - Predictable method -and property names - Highest coverage of the api of all the other modules on NPM!","title":"About"},{"location":"#getting-started","text":"Bloxy has 5 dependencies: got - To handle the HTTP requests (bloxy allows your own) lodash - For various purposes signalr-client - To connect with the WebSocket endpoints tough-cookie - For everything cookie-related tslib Necessary with built TypeScript projects :) Make sure you are able to install each one of these packages, as they are all vital to the functionality of this module!","title":"Getting Started"},{"location":"#prerequisites","text":"To be able to use bloxy, here's what you need to know: some knowledge of OOP and how it works knowledge about JS a computer","title":"Prerequisites"},{"location":"#installing","text":"Installing bloxy is easy! Simply enter the following command, and you should be good to go\ud83d\udc4d npm install bloxy --save Installing the dependencies may take longer!","title":"Installing"},{"location":"#contributing","text":"Please, before making an issue or pull request, please make sure you have done this already: - Made sure there are no similar issues / PRs like this - if so, rather give them a comment! - Asked for help in the Roblox API Community - Sometimes, even the best of us need help. - (Issues only) Follow the style / template as shown in example-issue - Consistency works!","title":"Contributing"},{"location":"#examples","text":"Check out below for some examples of how to use bloxy! Logging in","title":"Examples"},{"location":"#acknowledgements","text":"Sentanos - For helpful solutions and ideas - roblox-js","title":"Acknowledgements"},{"location":"#license","text":"This project is licensed under the MIT License.","title":"License"},{"location":"modules/","text":"bloxy Table of contents Classes Client","title":"bloxy"},{"location":"modules/#bloxy","text":"","title":"bloxy"},{"location":"modules/#table-of-contents","text":"","title":"Table of contents"},{"location":"modules/#classes","text":"Client","title":"Classes"},{"location":"classes/Client/","text":"Class: Client Hierarchy ClientBase \u21b3 Client Table of contents Constructors constructor Properties apis chat dataStoreManager debugger options rest socket user Methods getGroup getUser getUserIdFromUsername getUsernameFromUserId getUsersByUserIds getUsersByUsernames init isLoggedIn log login updateOptions Constructors constructor \u2022 new Client ( options? ) Parameters Name Type options? ClientOptions Overrides ClientBase.constructor Defined in client/Client.ts:19 Properties apis \u2022 apis : APIs Defined in client/Client.ts:13 chat \u2022 chat : default Defined in client/Client.ts:17 dataStoreManager \u2022 dataStoreManager : default Defined in client/Client.ts:16 debugger \u2022 debugger : Object Type declaration Name Type error Debugger info Debugger warn Debugger Inherited from ClientBase.debugger Defined in client/ClientBase.ts:41 options \u2022 options : ClientOptions Inherited from ClientBase.options Defined in client/ClientBase.ts:40 rest \u2022 rest : RESTController Defined in client/Client.ts:14 socket \u2022 socket : Socket Defined in client/Client.ts:15 user \u2022 user : null | default Defined in client/Client.ts:12 Methods getGroup \u25b8 getGroup ( groupId ): Promise < Group > Parameters Name Type groupId number Returns Promise < Group > Defined in client/Client.ts:87 getUser \u25b8 getUser ( userId ): Promise < User > Parameters Name Type userId string | number Returns Promise < User > Defined in client/Client.ts:100 getUserIdFromUsername \u25b8 getUserIdFromUsername ( username ): Promise < PartialUser > Parameters Name Type username string Returns Promise < PartialUser > Defined in client/Client.ts:143 getUsernameFromUserId \u25b8 getUsernameFromUserId ( userId ): Promise < PartialUser > Parameters Name Type userId string | number Returns Promise < PartialUser > Defined in client/Client.ts:157 getUsersByUserIds \u25b8 getUsersByUserIds ( userIds , excludeBannedUsers? ): Promise < PartialUser []> Parameters Name Type Default value userIds number [] | string [] undefined excludeBannedUsers boolean false Returns Promise < PartialUser []> Defined in client/Client.ts:168 getUsersByUsernames \u25b8 getUsersByUsernames ( usernames , excludeBannedUsers? ): Promise < PartialUser []> Parameters Name Type Default value usernames string [] undefined excludeBannedUsers boolean false Returns Promise < PartialUser []> Defined in client/Client.ts:180 init \u25b8 init (): void Returns void Defined in client/Client.ts:36 isLoggedIn \u25b8 isLoggedIn (): boolean Returns boolean Defined in client/Client.ts:32 log \u25b8 log ( level , data ): void Parameters Name Type level \"info\" | \"warn\" | \"error\" data DebugData Returns void Inherited from ClientBase.log Defined in client/ClientBase.ts:70 login \u25b8 login ( cookie? ): Promise < default > Parameters Name Type cookie? string Returns Promise < default > Defined in client/Client.ts:42 updateOptions \u25b8 updateOptions ( options? ): ClientOptions Parameters Name Type options? ClientOptions Returns ClientOptions Inherited from ClientBase.updateOptions Defined in client/ClientBase.ts:59","title":"Class: Client"},{"location":"classes/Client/#class-client","text":"","title":"Class: Client"},{"location":"classes/Client/#hierarchy","text":"ClientBase \u21b3 Client","title":"Hierarchy"},{"location":"classes/Client/#table-of-contents","text":"","title":"Table of contents"},{"location":"classes/Client/#constructors","text":"constructor","title":"Constructors"},{"location":"classes/Client/#properties","text":"apis chat dataStoreManager debugger options rest socket user","title":"Properties"},{"location":"classes/Client/#methods","text":"getGroup getUser getUserIdFromUsername getUsernameFromUserId getUsersByUserIds getUsersByUsernames init isLoggedIn log login updateOptions","title":"Methods"},{"location":"classes/Client/#constructors_1","text":"","title":"Constructors"},{"location":"classes/Client/#constructor","text":"\u2022 new Client ( options? )","title":" constructor"},{"location":"classes/Client/#parameters","text":"Name Type options? ClientOptions","title":"Parameters"},{"location":"classes/Client/#overrides","text":"ClientBase.constructor","title":"Overrides"},{"location":"classes/Client/#defined-in","text":"client/Client.ts:19","title":"Defined in"},{"location":"classes/Client/#properties_1","text":"","title":"Properties"},{"location":"classes/Client/#apis","text":"\u2022 apis : APIs","title":" apis"},{"location":"classes/Client/#defined-in_1","text":"client/Client.ts:13","title":"Defined in"},{"location":"classes/Client/#chat","text":"\u2022 chat : default","title":" chat"},{"location":"classes/Client/#defined-in_2","text":"client/Client.ts:17","title":"Defined in"},{"location":"classes/Client/#datastoremanager","text":"\u2022 dataStoreManager : default","title":" dataStoreManager"},{"location":"classes/Client/#defined-in_3","text":"client/Client.ts:16","title":"Defined in"},{"location":"classes/Client/#debugger","text":"\u2022 debugger : Object","title":" debugger"},{"location":"classes/Client/#type-declaration","text":"Name Type error Debugger info Debugger warn Debugger","title":"Type declaration"},{"location":"classes/Client/#inherited-from","text":"ClientBase.debugger","title":"Inherited from"},{"location":"classes/Client/#defined-in_4","text":"client/ClientBase.ts:41","title":"Defined in"},{"location":"classes/Client/#options","text":"\u2022 options : ClientOptions","title":" options"},{"location":"classes/Client/#inherited-from_1","text":"ClientBase.options","title":"Inherited from"},{"location":"classes/Client/#defined-in_5","text":"client/ClientBase.ts:40","title":"Defined in"},{"location":"classes/Client/#rest","text":"\u2022 rest : RESTController","title":" rest"},{"location":"classes/Client/#defined-in_6","text":"client/Client.ts:14","title":"Defined in"},{"location":"classes/Client/#socket","text":"\u2022 socket : Socket","title":" socket"},{"location":"classes/Client/#defined-in_7","text":"client/Client.ts:15","title":"Defined in"},{"location":"classes/Client/#user","text":"\u2022 user : null | default","title":" user"},{"location":"classes/Client/#defined-in_8","text":"client/Client.ts:12","title":"Defined in"},{"location":"classes/Client/#methods_1","text":"","title":"Methods"},{"location":"classes/Client/#getgroup","text":"\u25b8 getGroup ( groupId ): Promise < Group >","title":" getGroup"},{"location":"classes/Client/#parameters_1","text":"Name Type groupId number","title":"Parameters"},{"location":"classes/Client/#returns","text":"Promise < Group >","title":"Returns"},{"location":"classes/Client/#defined-in_9","text":"client/Client.ts:87","title":"Defined in"},{"location":"classes/Client/#getuser","text":"\u25b8 getUser ( userId ): Promise < User >","title":" getUser"},{"location":"classes/Client/#parameters_2","text":"Name Type userId string | number","title":"Parameters"},{"location":"classes/Client/#returns_1","text":"Promise < User >","title":"Returns"},{"location":"classes/Client/#defined-in_10","text":"client/Client.ts:100","title":"Defined in"},{"location":"classes/Client/#getuseridfromusername","text":"\u25b8 getUserIdFromUsername ( username ): Promise < PartialUser >","title":" getUserIdFromUsername"},{"location":"classes/Client/#parameters_3","text":"Name Type username string","title":"Parameters"},{"location":"classes/Client/#returns_2","text":"Promise < PartialUser >","title":"Returns"},{"location":"classes/Client/#defined-in_11","text":"client/Client.ts:143","title":"Defined in"},{"location":"classes/Client/#getusernamefromuserid","text":"\u25b8 getUsernameFromUserId ( userId ): Promise < PartialUser >","title":" getUsernameFromUserId"},{"location":"classes/Client/#parameters_4","text":"Name Type userId string | number","title":"Parameters"},{"location":"classes/Client/#returns_3","text":"Promise < PartialUser >","title":"Returns"},{"location":"classes/Client/#defined-in_12","text":"client/Client.ts:157","title":"Defined in"},{"location":"classes/Client/#getusersbyuserids","text":"\u25b8 getUsersByUserIds ( userIds , excludeBannedUsers? ): Promise < PartialUser []>","title":" getUsersByUserIds"},{"location":"classes/Client/#parameters_5","text":"Name Type Default value userIds number [] | string [] undefined excludeBannedUsers boolean false","title":"Parameters"},{"location":"classes/Client/#returns_4","text":"Promise < PartialUser []>","title":"Returns"},{"location":"classes/Client/#defined-in_13","text":"client/Client.ts:168","title":"Defined in"},{"location":"classes/Client/#getusersbyusernames","text":"\u25b8 getUsersByUsernames ( usernames , excludeBannedUsers? ): Promise < PartialUser []>","title":" getUsersByUsernames"},{"location":"classes/Client/#parameters_6","text":"Name Type Default value usernames string [] undefined excludeBannedUsers boolean false","title":"Parameters"},{"location":"classes/Client/#returns_5","text":"Promise < PartialUser []>","title":"Returns"},{"location":"classes/Client/#defined-in_14","text":"client/Client.ts:180","title":"Defined in"},{"location":"classes/Client/#init","text":"\u25b8 init (): void","title":" init"},{"location":"classes/Client/#returns_6","text":"void","title":"Returns"},{"location":"classes/Client/#defined-in_15","text":"client/Client.ts:36","title":"Defined in"},{"location":"classes/Client/#isloggedin","text":"\u25b8 isLoggedIn (): boolean","title":" isLoggedIn"},{"location":"classes/Client/#returns_7","text":"boolean","title":"Returns"},{"location":"classes/Client/#defined-in_16","text":"client/Client.ts:32","title":"Defined in"},{"location":"classes/Client/#log","text":"\u25b8 log ( level , data ): void","title":" log"},{"location":"classes/Client/#parameters_7","text":"Name Type level \"info\" | \"warn\" | \"error\" data DebugData","title":"Parameters"},{"location":"classes/Client/#returns_8","text":"void","title":"Returns"},{"location":"classes/Client/#inherited-from_2","text":"ClientBase.log","title":"Inherited from"},{"location":"classes/Client/#defined-in_17","text":"client/ClientBase.ts:70","title":"Defined in"},{"location":"classes/Client/#login","text":"\u25b8 login ( cookie? ): Promise < default >","title":" login"},{"location":"classes/Client/#parameters_8","text":"Name Type cookie? string","title":"Parameters"},{"location":"classes/Client/#returns_9","text":"Promise < default >","title":"Returns"},{"location":"classes/Client/#defined-in_18","text":"client/Client.ts:42","title":"Defined in"},{"location":"classes/Client/#updateoptions","text":"\u25b8 updateOptions ( options? ): ClientOptions","title":" updateOptions"},{"location":"classes/Client/#parameters_9","text":"Name Type options? ClientOptions","title":"Parameters"},{"location":"classes/Client/#returns_10","text":"ClientOptions","title":"Returns"},{"location":"classes/Client/#inherited-from_3","text":"ClientBase.updateOptions","title":"Inherited from"},{"location":"classes/Client/#defined-in_19","text":"client/ClientBase.ts:59","title":"Defined in"}]}